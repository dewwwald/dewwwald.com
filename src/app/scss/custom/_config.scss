/*------------------------------------*\
    VARS.SCSS
\*------------------------------------*/
/**
 * Any variables you find set in this framework's `_defaults.scss` that you do not wish to
 * keep, simply redefine here. This means that if this framework, for example, sets
 * your `$fs-base` at 16px and you wish it to be 14px, simply redeclare
 * that variable in this file. this framework ignores its own variables in favour of
 * using your own, so you can completely modify how this framework works without ever
 * having to alter the framework itself.
 */





/*------------------------------------*\
    $OBJECTS-AND-ABSTRACTIONS
\*------------------------------------*/
/**
 * All of this framework's objects and abstractions are initially turned off by
 * default. This means that you start any project with as little as possible,
 * and introducing objects and abstractions is as simple as switching the
 * following variables to `true`.
 */
$use-arrows:             false;
$use-beautons:           false;
$use-block-list:         false;
$use-breadcrumb:         false;
$use-columns:            false;
$use-flex-video:         false;
$use-flyout:             false;
$use-greybox:            false;
$use-grids:              true;
$grid-use-fractions:     true;
$responsive-extra:       true;
$use-icon-text:          false;
$use-link-complex:       false;
$use-lozenges:           false;
$use-marginalia:         false;
$use-matrix:             false;
$use-media:              false;
$use-nav:                false;
$use-options:            false;
$use-pagination:         false;
$use-rules:              false;
$use-split:              false;
$use-sprite:             false;
$use-stats:              false;
$use-this-or-this:       false;
$use-icon-as-inline-svg: false;

$use-alerts:             false;
$use-buttons:            true; // use either these, or beautons, but not both
$use-ckeditor:           false;
$use-forms-affixes:      false;
$use-icon-as-font:       false;
$use-icon-as-inline-svg: false;
$use-print:              false;
$use-progress-bars:      false;
$use-ratio-object:       true;
$use-vertical-center:    false;
$use-tinymce:            false;





/*------------------------------------*\
    $OVERRIDES
\*------------------------------------*/
/**
 * Place any variables that should override core _defaults.scss here.
 */
$fs-giga:  96px!default; // .fs--giga
$fs-mega:  72px!default; // .fs--mega
$fs-kilo:  48px; // .fs--kilo

$fs-h1:    48px; // .fs--alpha
$fs-h2:    40px; // .fs--beta
$fs-h3:    36px; // .fs--gamma
$fs-h4:    24px; // .fs--delta
$fs-h5:    18px; // .fs--epsilon
$fs-h6:    16px; // .fs--zeta

$fs-milli: 14px; // .fs--milli
$fs-micro: 10px; // .fs--micro
$fs-nano:   8px; // .fs--nano

$lap-start:     481px;
$desk-start:    920px;
$desk-wide-start:   1440px;






/*------------------------------------*\
    $CUSTOM
\*------------------------------------*/
/**
 * Place any of your own variables that sit on top of core _defaults.scss here.
 */
$fs-base: 18px;
$base-line-height:  22px;
$base-spacing-unit: 1.5;

$grid-gutter: 2;

$base-ui-color: #404040;
$brand-color: #acded5;
$selection-color: $brand-color;





/*------------------------------------*\
    $FONTS
\*------------------------------------*/
/**
 * Icon Font
 *
 * Dependant on $use-icons being true. These variables are used in the font-face mixin.
 *
 * This font is enabled via custom/base/_fonts.scss
 */

/**
 * Base Font Face
 *
 * This font is enabled via custom/base/_fonts.scss
 */
$font-base          : "Open Sans";
$font-base-stack    : $font-base, Arial, sans-serif;




/**
 * Header Font Face
 *
 * This font is enabled via custom/header/_fonts.scss
 */
$font-header          : "Rokkitt";
$font-header-stack    : $font-header, Arial, sans-serif;





/*------------------------------------*\
    $COLORS
\*------------------------------------*/
/**
 * The base color for text, borders, etc.
 */
$clr-base-extra: #707070;
$clr-base      : $base-ui-color;
$clr-base-lt   : #a1a1a1;
$clr-base-ltr  : #e6e6e6;
$clr-base-ltst : #f5f5f5;
$clr-base-dk   : darken($clr-base, 10%);

/**
 * The primary non-base color
 */
$clr-primary      : $brand-color;
$clr-primary-lt   : lighten($clr-primary, 10%);
$clr-primary-ltr  : lighten($clr-primary, 35%);
$clr-primary-ltst : lighten($clr-primary, 40%);
$clr-primary-dk   : darken($clr-primary, 10%);

/**
 * The secondary non-base color
 */
$clr-secondary      : #edd54f;
$clr-secondary-lt   : #ffe12f;
$clr-secondary-ltr  : lighten($clr-secondary, 35%);
$clr-secondary-ltst : lighten($clr-secondary, 40%);
$clr-secondary-dk   : darken($clr-secondary, 10%);

/**
 * The tertiary non-base color
 */
$clr-tertiary      : #f5795f;
$clr-tertiary-lt   : #f49f8f;
$clr-tertiary-ltr  : lighten($clr-tertiary, 35%);
$clr-tertiary-ltst : lighten($clr-tertiary, 40%);
$clr-tertiary-dk   : darken($clr-tertiary, 10%);

// neutrals
$clr-ntrl-min : #fff;                          // white
$clr-ntrl-10  : darken($clr-ntrl-min, 10%);
$clr-ntrl-20  : darken($clr-ntrl-min, 20%);
$clr-ntrl-50  : darken($clr-ntrl-min, 50%);
$clr-ntrl-80  : darken($clr-ntrl-min, 80%);
$clr-ntrl-90  : darken($clr-ntrl-min, 90%);
$clr-ntrl-max : darken($clr-ntrl-min, 100%);   // black

// success colours
$clr-success      : #468847;
$clr-success-lt   : lighten($clr-success, 20%);
$clr-success-ltr  : lighten($clr-success, 45%);
$clr-success-ltst : lighten($clr-success, 50%);
$clr-success-dk   : darken($clr-success, 10%);

// warning colours
$clr-warning       : #c09853;
$clr-warning-lt    : lighten($clr-warning, 20%);
$clr-warning-ltr   : lighten($clr-warning, 35%);
$clr-warning-ltst  : lighten($clr-warning, 40%);
$clr-warning-dk    : darken($clr-warning, 10%);

// danger / error / important colours
$clr-danger      : #b94a48;
$clr-danger-lt   : lighten($clr-danger, 20%);
$clr-danger-ltr  : lighten($clr-danger, 35%);
$clr-danger-ltst : lighten($clr-danger, 40%);
$clr-danger-dk   : darken($clr-danger, 10%);

// info colours
$clr-info      : #3a87ad;
$clr-info-lt   : lighten($clr-info, 20%);
$clr-info-ltr  : lighten($clr-info, 40%);
$clr-info-ltst : lighten($clr-info, 45%);
$clr-info-dk   : darken($clr-info, 10%);

